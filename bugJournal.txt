1.
    Date: 2021-10-24
    Bug Description: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer';
                     nested exception is java.lang.NumberFormatException: For input string: "css"

    Fix: I had a controller that accepts two parameters. One is of type String, the other is of type Integer.
         So, when I tried to let Thymeleaf load my css files, that controller somehow caught the css import
         route, leading to the mentioned error. Removing that controller solved the issue.

2.
    Date: 2021-10-30
    Bug Description: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing
                    (template: "class path resource [templates/admin/adminIndex.html]")

    Fix: When I needed to apply Thymeleaf template, I should insert the full relative path of the template. In
         this case for example, the adminIndex.html uses the admin_fragment.html template, then I need to use the
         full relative path: admin/admin_fragment.

3.
    Date: 2021-11-02
    Bug Description: th:text does not work
    Fix: This is because I did not create the entity object correct, so the returned object has null name. That is why
         I did not see the replaced text. I added @RequestParam to the respective controller method, and called the
         object constructor correctly. It works fine now.

4.
    Date: 2021-11-04
    Bug Description: When I tried to remove a category from the database (i.e. deleteById), it returned a 404 error.
    Fix: I made myself awkward again. It turned out that I missed a "/" at the very beginning of the th:href link.

5.
    Date:2021-11-22
    Bug Description: Method threw 'org.hibernate.LazyInitializationException' exception. Cannot evaluate com.blog_zheng.myblog.entity.User.toString()
    Reason: When Hibernate's session is closed, it won't be able to fetch any lazy loaded collections. In my case here,
            @OneToMany is lazily loaded by default. The User entity has a list of Blogs. When I want to access the
            User entity and call toString() on it, since the content of each Blog is lazy loaded and Hibernate session is closed,
            it won't be able to evaluate User.toString() and thus throw a LazyInitializationException.
    Fix: use @ToString.Exclude annotation

6.
    Date: 2021-11-28
    Bug Description: When editing some blog, the blog posted by the form from the frontend has null blogID, so it will always create a new blog
                     instead of updating the specific blog.
    Fix: on the form of the frontend side, I added a hidden input that stores the id of the blog if it exists.

7.
    Date: 2021-11-28
    Bug Description: A non-null object has all its properties set to NULL
    Fix: None
    Reason: Hibernate actually gives me a proxy object instead of an instance of the entity class that I require.
            Once I access any of the properties via code or functions, Hibernate will load the data in the background,
            and construct an instance of that class and return the correct value. So there is no need to worry about
            transferring between proxy object and the entity object.